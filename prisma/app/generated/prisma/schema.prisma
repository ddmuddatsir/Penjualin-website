generator client {
  provider      = "prisma-client-js"
  output        = "./app/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String
  password  String?
  role      Role      @default(SALES)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  clerkId   String    @unique
  isOnline  Boolean   @default(false)
  deals     Deal[]    @relation("UserDeals")
  notes     Note[]
  Session   Session[]
  tasks     Task[]    @relation("AssignedTasks")
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String?
  phone     String?
  address   String?
  company   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deals     Deal[]
}

model Deal {
  id         String    @id @default(uuid())
  name       String
  value      Int
  stage      DealStage @default(Prospek)
  customerId String
  ownerId    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  customer   Customer  @relation(fields: [customerId], references: [id])
  owner      User      @relation("UserDeals", fields: [ownerId], references: [id])
  notes      Note[]
  tasks      Task[]
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  deadline    DateTime?
  completed   Boolean   @default(false)
  dealId      String
  assigneeId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  assignee    User      @relation("AssignedTasks", fields: [assigneeId], references: [id])
  deal        Deal      @relation(fields: [dealId], references: [id])
}

model Product {
  id         String   @id @default(uuid())
  name       String
  price      Int
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  category   Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  products  Product[]
}

model Note {
  id          String       @id @default(uuid())
  content     String
  userId      String
  dealId      String
  createdAt   DateTime     @default(now())
  attachments Attachment[]
  deal        Deal         @relation(fields: [dealId], references: [id])
  user        User         @relation(fields: [userId], references: [id])
}

model Attachment {
  id         String   @id @default(uuid())
  url        String
  fileName   String
  noteId     String
  uploadedAt DateTime @default(now())
  note       Note     @relation(fields: [noteId], references: [id])
}

enum Role {
  ADMIN
  SALES
  MANAGER
}

enum DealStage {
  Prospek
  Negosiasi
  Closing
  Selesai
}
